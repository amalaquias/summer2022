June 13th
  - Nearly finished orientation
  - Met Raj in person
  - Set up my workstation
  
June 14th
  - Finished setting up ssh key and github
  - Began reading papers suggested by Nicola
  - Began looking into pix2pix GAN model
  
June 15th
  - Read research papers on differences in wildfire smoke plumes
  - Familiarized myself with fundamentals in neural nets
  - set up docker with vscode

June 16th
  - Followed tutorials on pix2pix
  - set up training images from kaggle
  - emailed Nicola about using colab/jupyter or cloud service for building models

June 17th
  - experimented with pix2pix pre-generated models
  - used python package dataset-tools for generating canny edges from images

June 20th
  - Researched more into GANs model
  - Reached out to Nicola with regards to setting up my access to the gpu system
  
June 21st
  - https://www.researchgate.net/publication/351359172_Generative_adversarial_networks_to_model_air_pollution_under_uncertainty
  - https://www.researchgate.net/publication/344506117_Conditional_Generative_Adversarial_Networks_to_Model_Urban_Outdoor_Air_Pollution
  - Two papers very similar to what we are trying to acheive with modeling air quality using GANs
  - alcf account was approved and gained access to the gpu system

June 22nd
  - Read more research papers on how topology and and wind directiona affect air quality
  - Emailed Nicola with list of clarification questions regarding types of input data / optimizing sensor placement
  
June 23rd
  - Attended two lectures discussing applications of DL
  - Began experimenting with modeling via ssh through the theta gpu system
  
June 27th
  - Met with Bhupendra, Dario, and Sean with regards to my project details/objectives
  - Reread the paper I sent to Nicola that gave proof of concept to the project
  - Emailed the researcher of the paper if they were willing to share their project code
  
June 28th
  - Met with Nicola over zoom to clarify detailed about GANs for AQ and optimizing sensor placement
  - Met with Dario to discuss the CGANs implementation used in the paper
  - Slacked the Oregon researchers to gain access to AQ data in Oregon
  
June 29th
  - Career Day
  
June 30th
  - Set up my vscode to experiment with CGANs model found online (shell script created)
  - First testing aroung with the MNIST dataset to experiment
  - Asked Dario about how to modify this model to mimic the research paper's
  
July 5th - 8th
  GOALS
    - Explore existing open-source GANs model for tabular data
    - Format data to desiried format via pandas
    - Convert raw data to indexable AQ values
    - Learn how to present the data
    
  ACHEIVED/RESULTS
    - Attended a student's connects meeting with Daniel Huang
    - Emailed and received API read key from purple air
    - Tinkered with batch size and number of epochs for modeling
    - Realized that previous GANs model used for tabular data is not the best model
    - Learned how to use pandas to modify input csv to desired output
    - Found new model for timeseries, but had difficulity implementing it since it was built from tf1
    - Replicated jamal toutouh's input dataset graphs using matplotlib
    
 July 11th - 15th
   GOALS
    - Continue searching for GANs model that works with time series with good documentation
    - Find new model that is not based on tf1, at least tf2 or preferably pytorch
    - Continue experimenting and learning the basics behind pytorch
    - Replicate jamal's paper's results
    
   ACHEIVED/RESULTS
    - Discussed internship progress with Daniel Huang
    - Attend two AI/ML lectures hosted by MCS
    - Modified automated csv converter to accomodate for jamal's input csv's and purple air csv's
    - Had difficulty with finding desired model but currently working with CTGAN made by MIT Synthetic Data Vault group
    - Learning the use/implementation documentation behind CTGAN
    - Began training dataset using CTGAN and had success
    - Issue so far is considered discrete vs continous data values in model
    
 July 18th - 22th
   GOALS
    - Either find new time series GAN or test dataset with CTGAN
    - Understand how discrete/continous values are evaluated in series
      - Try to implement or find a model that implements ^
    - Begin training model on basic datapoints like humidity
    
   ACHEIVED/RESULTS
    - Found interesting time series GAN released one week ago based on pytorch
    - The model DoppelGANger handles both discrete (attributes) and continuous (features) mutilivariate series
    - Began training model on humidity data since it is bounded from 0 to 100 (easeier for GANs to model)
    - Model rounds to 10 minute estimates (may change in futures to hourly dependning on the available data)
    - Trained on 4 urban nodes in similar areas
    - Developed correlation matrix between real and synthetic data (showed it synthetic dataset maintained the original temporal correlations)
    - Trained model on 2020 data and compared to 2021 real data for testing
    - The model is less diverse and has less extreme points than 2020 dataset
    - Issue is that many nodes have incomplete data so could only get months' worth for four nodes
  
